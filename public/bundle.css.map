{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Greeting.svelte",
    "../src/Query.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Greeting from './Greeting.svelte';\n    export let name;\n</script>\n<style>\n    h1 {\n        color: purple;\n    }\n</style>\n<h1>slms!</h1>\n<Greeting first_name=\"Steve\" last_name=\"Smith\"/>",
    "<script>\n    export let first_name;\n    export let last_name;\n\n    $: name = first_name + \" \" + last_name;\n</script>\n<style>\n    h2 {\n        color: purple;\n        font-family: 'Comic Sans MS';\n        font-size: 2em;\n    }\n</style>\n<h2>Hello {name}</h2>\n",
    "<script>\nconst url =\"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-34/sparql\"\n//Note that the query is wrapped in es6 template strings to allow for easy copy pasting\nconst query = `\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX edm: <http://www.europeana.eu/schemas/edm/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\nSELECT ?result ?title ?place ?type ?image\nWHERE {\n  <https://hdl.handle.net/20.500.11840/termmaster8401> skos:narrower* ?place .\n  ?place skos:prefLabel ?placeName .\n\n  VALUES ?type {\"Godenbeeld\" \"godenbeeld\"}\n  ?result dc:title ?title ;\n    \t  dc:type ?type ;\n          dct:spatial ?place ;\n  \t\t  edm:isShownBy ?image\n}\nORDER BY ?result\nLIMIT 30\n`\nlet results = {};\n\nrunQuery(url, query)\n//console.log(results)\n\nfunction runQuery(url, query){\n  //Test if the endpoint is up and print result to page\n  // (you can improve this script by making the next part of this function wait for a succesful result)\n    // Call the url with the query attached, output data\n    fetch(url+\"?query=\"+ encodeURIComponent(query) +\"&format=json\")\n        .then(res => res.json())\n        .then(json => {\n            console.log(json.results.bindings);\n            results = json.results.bindings\n  })\n}\n</script>\n\n<style>\nimg {\n    display: block;\n    height: 200px;\n}\n</style>\n\n<ul>\n    {#each results as source}\n        <li>\n            {source.title.value}\n            <img src={source.image.value} alt={source.title.value}>\n        </li>\n    {/each}\n</ul>"
  ],
  "names": [],
  "mappings": "AAKI,EAAE,cAAC,CAAC,AACA,KAAK,CAAE,MAAM,AACjB,CAAC;ACAD,EAAE,eAAC,CAAC,AACA,KAAK,CAAE,MAAM,CACb,WAAW,CAAE,eAAe,CAC5B,SAAS,CAAE,GAAG,AAClB,CAAC;ACiCL,GAAG,cAAC,CAAC,AACD,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,KAAK,AACjB,CAAC"
}